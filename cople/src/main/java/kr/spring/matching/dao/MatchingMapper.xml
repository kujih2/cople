<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.matching.dao.MatchingMapper">
	<!-- 현직자 신청 -->
	<insert id="insertEmp" parameterType="EmpVO">
		INSERT INTO emp(
		emp_num,
		emp_status,
		comsize,
		compeople,
		field,
		role,
		career,
		salary_status,
		salary,
		periodtime,
		education,
		major,
		certification,
		location,
		location_api,
		location_api_lat,
		location_api_lng,
		workstart,
		mem_num,
		filename,
		advice,
		register_date
		)
		VALUES(
		emp_seq.nextval,
		0,
		#{comsize},
		#{compeople},
		#{field},
		#{role},
		#{career},
		#{salary_status},
		#{salary},
		#{periodtime},
		#{education},
		#{major},
		#{certification},
		#{location},
		#{location_api},
		#{location_api_lat},
		#{location_api_lng},
		#{workstart},
		#{mem_num},
		#{filename},
		#{advice},
		SYSDATE
		)
	</insert>

	<select id="listEmp" parameterType="map" resultType="empVO">
		SELECT 
		  *
		FROM (SELECT 
				a.*, rownum rnum
			  FROM (SELECT 
			  	    emp_num,
			  	    emp_status,
					comsize,
					compeople,
					field,
					role,
					career,
					salary_status,
					salary,
					periodtime,
					education,
					major,
					certification,
					location,
					location_api,
					location_api_lat,
					location_api_lng,
					workstart,
					mem_num,
					filename,
					<![CDATA[
					REPLACE(REPLACE(advice,'<','&lt;'),'>', '&gt;')advice,
					]]>
					register_date,
					m_date,
					auth,
					id
				FROM
					emp
				LEFT OUTER JOIN member USING(mem_num) 
				WHERE auth=2
				ORDER BY register_date DESC)a)
				<![CDATA[
				WHERE rnum >= #{start} AND rnum <= #{end}
				]]>
			  
	</select>
	
	<select id="insertLetter" parameterType="LetterVO" >
		INSERT INTO 
			letter
				(letter_num,
				sender,
				receiver,
				letter_content,
				date_sent,
				letter_ip)
			VALUES
				(
				letter_seq.nextval,
				#{sender},
				#{receiver},
				#{letter_content},
				SYSDATE,
				#{letter_ip}
				)
	</select>
	
	<select id="insertAdvice" parameterType="adviceVO" >
		INSERT INTO 
			advice
				(advice_num,
				sender,
				receiver,
				advice_content,
				date_sent,
				advice_ip,
				filename)
			VALUES
				(
				advice_seq.nextval,
				#{sender},
				#{receiver},
				#{advice_content},
				SYSDATE,
				#{advice_ip},
				#{filename}
				)
	</select>
	
	<sql id="letterSearch">
		<where>
			<if test="keyword!=null and keyword!=''">
				<if test="keyfield==1">
					AND sender LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==2">
					AND letter_content LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==3">
					AND (letter_content LIKE '%' || #{keyword} || '%' OR
					 sender LIKE '%' || #{keyword} || '%')
				</if>
			</if>
		</where>
	</sql>
	
	
	<!-- 받은 쪽지 리스트 -->
	<select id="selectReceivedLetter" parameterType="map" resultType="letterVO">
		SELECT 
		  *
		FROM
			(SELECT
				a.*, rownum rnum
			 FROM
			   (SELECT 
			   		letter_num, 
			   		sender,
			   		receiver,
			   		<![CDATA[
				   	 REPLACE(REPLACE(letter_content,'<','&lt;'),'>', '&gt;')letter_content,
			   		]]>
			   		date_sent,
			   		date_read,
			   		member.id AS id
			    FROM 
			        letter
			    JOIN 
			    	member
			    	ON letter.sender=member.mem_num
			    WHERE 
			    	receiver=#{receiver}
			    	<include refid="letterSearch"></include>
			   	ORDER BY letter_num DESC,
			   			 date_read NULLS FIRST,
			   			 date_read DESC)a)
		<![CDATA[
		WHERE rnum>= #{start} AND rnum<= #{end}
		]]>
	</select>
	
	<sql id="letterSentSearch">
		<where>
			<if test="keyword!=null and keyword!=''">
				<if test="keyfield==1">
					AND receiver LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==2">
					AND letter_content LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==3">
					AND (letter_content LIKE '%' || #{keyword} || '%' OR
					 receiver LIKE '%' || #{keyword} || '%')
				</if>
			</if>
		</where>
	</sql>
	
	<!-- 보낸 쪽지 리스트 -->
	<select id="selectSentLetter" parameterType="map" resultType="letterVO">
		SELECT 
		  *
		FROM
			(SELECT
				a.*, rownum rnum
			 FROM
			   (SELECT 
			   		letter_num, 
			   		sender,
			   		receiver,
			   		<![CDATA[
				   	 REPLACE(REPLACE(letter_content,'<','&lt;'),'>', '&gt;')letter_content,
			   		]]>
			   		date_sent,
			   		date_read,
			   		member.id AS id
			    FROM 
			        letter
			    JOIN 
			    	member
			    	ON letter.receiver=member.mem_num
			    WHERE 
			    	sender=#{sender}
			    	<include refid="letterSentSearch"></include>
			   	ORDER BY letter_num DESC,
			   			 date_read NULLS FIRST,
			   			 date_read DESC)a)
		<![CDATA[
		WHERE rnum>= #{start} AND rnum<= #{end}
		]]>
	</select>
	
	<!-- id로 memenum 구하기 -->
	
	
	<!-- 받은 쪽지 갯수 -->
		
	<sql id="adviceSearch">
		<where>
			<if test="keyword!=null and keyword!=''">
				<if test="keyfield==1">
					AND sender LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==2">
					AND advice_content LIKE '%' || #{keyword} || '%'
				</if>
				<if test="keyfield==3">
					AND (advice_content LIKE '%' || #{keyword} || '%' OR
					 sender LIKE '%' || #{keyword} || '%')
				</if>
			</if>
		</where>
	</sql>
	
	<!-- 받은 첨삭 리스트 -->
	<select id="selectReceivedAdvice" parameterType="map" resultType="adviceVO">
		SELECT 
		  *
		FROM
			(SELECT
				a.*, rownum rnum
			 FROM
			   (SELECT 
			   		advice_num, 
			   		sender,
			   		receiver,
			   		<![CDATA[
				   	 REPLACE(REPLACE(advice_content,'<','&lt;'),'>', '&gt;')advice_content,
			   		]]>
			   		date_sent,
			   		date_read,
			   		member.id AS id
			    FROM 
			        advice
			    JOIN 
			    	member
			    	ON advice.sender=member.mem_num
			    WHERE 
			    	receiver=#{receiver}
			    	<include refid="adviceSearch"></include>
			   	ORDER BY advice_num DESC,
			   			 date_read NULLS FIRST,
			   			 date_read DESC)a)
		<![CDATA[
		WHERE rnum>= #{start} AND rnum<= #{end}
		]]>
	</select>
	
	
	<sql id="adviceSendSearch">
	<where>
		<if test="keyword!=null and keyword!=''">
			<if test="keyfield==1"> AND receiver LIKE '%' || #{keyword} || '%' </if>
			<if test="keyfield==2"> AND advice_content LIKE '%' || #{keyword} || '%' </if>
			<if test="keyfield==3"> AND (advice_content LIKE '%' || #{keyword} || '%' OR
				receiver LIKE '%' || #{keyword} || '%') </if>
		</if>
	</where>
</sql>
	<!-- 보낸 첨삭 리스트 -->
	<select id="selectSentAdvice" parameterType="map" resultType="adviceVO">
		SELECT 
			* 
		FROM 
			(SELECT a.*, rownum rnum 
			 FROM 
			 	(SELECT 
			 		advice_num, 
			 		sender, 
			 		receiver,
					<![CDATA[ REPLACE(REPLACE(advice_content,'<','&lt;'),'>', '&gt;')advice_content, ]]>
					date_sent, 
					date_read, 
					member.id AS id 
				 FROM advice JOIN member ON advice.receiver=member.mem_num WHERE sender=#{sender} and sent_del=0
				<include refid="adviceSendSearch"/>
				ORDER BY advice_num DESC, date_read NULLS FIRST, date_read DESC)a)
				<![CDATA[ WHERE rnum>= #{start} AND rnum<= #{end} ]]>
	</select>
	
	
	
</mapper>